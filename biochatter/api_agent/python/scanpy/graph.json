{
    "directed": true,
    "multigraph": false,
    "graph": {},
    "nodes": [
        {
            "api": "sc.pp.neighbors",
            "products": [
                "data.obsm[\"X_pca\"]",
                "data.varm[\"PCs\"]",
                "data.uns[\"pca\"]",
                "data.uns[\"neighbors\"]",
                "data.obsp[\"distances\"]",
                "data.obsp[\"connectivities\"]"
            ],
            "id": "sc.pp.neighbors"
        },
        {
            "api": "sc.tl.umap",
            "products": [
                "data.obsm[\"X_umap\"]",
                "data.uns[\"umap\"]"
            ],
            "id": "sc.tl.umap"
        },
        {
            "api": "sc.pl.scatter",
            "products": [],
            "id": "sc.pl.scatter"
        },
        {
            "api": "sc.tl.leiden",
            "products": [
                "data.obs[\"leiden\"]",
                "data.uns[\"leiden\"]"
            ],
            "id": "sc.tl.leiden"
        },
        {
            "api": "sc.pl.umap",
            "products": [],
            "id": "sc.pl.umap"
        },
        {
            "api": "sc.tl.louvain",
            "products": [
                "data.obs[\"louvain\"]",
                "data.uns[\"louvain\"]"
            ],
            "id": "sc.tl.louvain"
        },
        {
            "api": "sc.pl.heatmap",
            "prep": "",
            "args": {
                "adata": "data",
                "var_names": [
                    "TMSB4X",
                    "MALAT1",
                    "B2M"
                ],
                "groupby": "louvain"
            },
            "arg_types": {
                "data": "object",
                "var_names": "list",
                "groupby": "str"
            },
            "id": "sc.pl.heatmap"
        },
        {
            "api": "sc.pl.dotplot",
            "prep": "",
            "args": {
                "adata": "data",
                "var_names": [
                    "TMSB4X",
                    "MALAT1",
                    "B2M"
                ],
                "groupby": "louvain"
            },
            "arg_types": {
                "data": "object",
                "var_names": "list",
                "groupby": "str"
            },
            "id": "sc.pl.dotplot"
        },
        {
            "api": "sc.pl.violin",
            "prep": "",
            "args": {
                "adata": "data",
                "keys": [
                    "TMSB4X",
                    "MALAT1",
                    "B2M"
                ],
                "groupby": "louvain"
            },
            "arg_types": {
                "data": "object",
                "keys": "list",
                "groupby": "str"
            },
            "id": "sc.pl.violin"
        },
        {
            "api": "sc.pl.dendrogram",
            "prep": "",
            "args": {
                "adata": "data",
                "groupby": "louvain"
            },
            "arg_types": {
                "data": "object",
                "groupby": "str"
            },
            "id": "sc.pl.dendrogram"
        },
        {
            "api": "sc.tl.diffmap",
            "prep": "",
            "args": {
                "adata": "data"
            },
            "arg_types": {
                "data": "object"
            },
            "products": [
                "data.obsm[\"X_diffmap\"]",
                "data.uns[\"diffmap_evals\"]"
            ],
            "id": "sc.tl.diffmap"
        },
        {
            "api": "sc.pl.diffmap",
            "prep": "",
            "args": {
                "adata": "data",
                "color": "leiden"
            },
            "arg_types": {
                "data": "object",
                "color": "str"
            },
            "id": "sc.pl.diffmap"
        },
        {
            "api": "sc.pp.log1p",
            "prep": "",
            "args": {
                "data": "data"
            },
            "arg_types": {
                "data": "object"
            },
            "products": [
                "data.X"
            ],
            "special": [
                1
            ],
            "id": "sc.pp.log1p"
        },
        {
            "api": "sc.pp.highly_variable_genes",
            "prep": "",
            "args": {
                "adata": "data"
            },
            "arg_types": {
                "data": "object"
            },
            "products": [
                "data.var[\"highly_variable\"]",
                "data.var[\"means\"]",
                "data.var[\"dispersions\"]",
                "data.var[\"dispersions_norm\"]",
                "data.var[\"variances\"]",
                "data.var[\"variances_norm\"]",
                "data.var[\"highly_variable_rank\"]",
                "data.var[\"highly_variable_nbatches\"]",
                "data.var[\"highly_variable_intersection\"]"
            ],
            "_comment": "These products are curated from doc, from 'variances' to the end are actually non-existent.Products are not always fully generated, such as the current case.When testing dependencies, results would show non-existent dependencies. Although we already fixed this problem in dependency finder program,this is still a problematic software design making return values unclear and unfixed.We should encourage fixed api name, arguments and return values.In the meanwhile, returning an object is acceptable only if it is fixed.Note that we hope products can be automatically extracted from doc through LLM.If doc provides vague information products, then we believe it is poorly designed.",
            "id": "sc.pp.highly_variable_genes"
        },
        {
            "api": "sc.pl.highly_variable_genes",
            "prep": "",
            "args": {
                "adata": "data"
            },
            "arg_types": {
                "data": "object"
            },
            "id": "sc.pl.highly_variable_genes"
        },
        {
            "api": "sc.pl.pca",
            "prep": "",
            "args": {
                "adata": "data",
                "color": "louvain"
            },
            "arg_types": {
                "data": "object",
                "color": "str"
            },
            "id": "sc.pl.pca"
        },
        {
            "api": "sc.tl.embedding_density",
            "prep": "",
            "args": {
                "adata": "data",
                "basis": "umap"
            },
            "arg_types": {
                "data": "object",
                "basis": "str"
            },
            "products": [
                "data.obs[\"umap_density\"]",
                "data.uns[\"umap_density_params\"]"
            ],
            "id": "sc.tl.embedding_density"
        },
        {
            "api": "sc.pl.embedding_density",
            "prep": "",
            "args": {
                "adata": "data",
                "basis": "umap"
            },
            "arg_types": {
                "data": "object",
                "basis": "str"
            },
            "id": "sc.pl.embedding_density"
        },
        {
            "api": "sc.tl.rank_genes_groups",
            "prep": "",
            "args": {
                "adata": "data",
                "groupby": "leiden"
            },
            "arg_types": {
                "data": "object",
                "groupby": "str"
            },
            "products": [
                "data.uns[\"rank_genes_groups\"]"
            ],
            "id": "sc.tl.rank_genes_groups"
        },
        {
            "api": "sc.pl.rank_genes_groups_dotplot",
            "prep": "",
            "args": {
                "adata": "data",
                "groupby": "leiden"
            },
            "arg_types": {
                "data": "object",
                "groupby": "str"
            },
            "id": "sc.pl.rank_genes_groups_dotplot"
        },
        {
            "api": "sc.pl.correlation_matrix",
            "prep": "",
            "args": {
                "adata": "data",
                "groupby": "leiden"
            },
            "arg_types": {
                "data": "object",
                "groupby": "str"
            },
            "id": "sc.pl.correlation_matrix",
            "_deprecated": true,
            "_comment": "Not found in doc."
        },
        {   
            "api": "root",
            "products": [
                "data.X"
            ],
            "id": "root"
        }
    ],
    "edges": [
        {
            "dependencies": [
                "data.uns[\"neighbors\"]",
                "data.obsp[\"connectivities\"]"
            ],
            "source": "sc.pp.neighbors",
            "target": "sc.tl.umap",
            "args": {"adata": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.uns[\"neighbors\"]",
                "data.obsp[\"connectivities\"]"
            ],
            "source": "sc.pp.neighbors",
            "target": "sc.tl.leiden",
            "args": {"adata": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.uns[\"neighbors\"]",
                "data.obsp[\"connectivities\"]"
            ],
            "source": "sc.pp.neighbors",
            "target": "sc.tl.louvain",
            "args": {"adata": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.uns[\"neighbors\"]",
                "data.obsp[\"connectivities\"]"
            ],
            "source": "sc.pp.neighbors",
            "target": "sc.tl.diffmap",
            "args": {"adata": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.obsm[\"X_pca\"]"
            ],
            "source": "sc.pp.neighbors",
            "target": "sc.pl.pca",
            "args": {"adata": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.obsm[\"X_umap\"]"
            ],
            "source": "sc.tl.umap",
            "target": "sc.pl.scatter",
            "args": {"basis": "umap"},
            "arg_types": {
                "basis": "str"
            }
        },
        {
            "dependencies": [
                "data.obsm[\"X_umap\"]"
            ],
            "source": "sc.tl.umap",
            "target": "sc.pl.umap",
            "args": {"adata": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.obsm[\"X_umap\"]"
            ],
            "source": "sc.tl.umap",
            "target": "sc.tl.embedding_density",
            "args": {"basis": "umap"},
            "arg_types": {
                "basis": "str"
            }
        },
        {
            "dependencies": [
                "data.obsm[\"X_umap\"]"
            ],
            "source": "sc.tl.umap",
            "target": "sc.pl.embedding_density",
            "args": {"basis": "umap"},
            "arg_types": {
                "basis": "str"
            }
        },
        {
            "dependencies": [
                "data.obs[\"leiden\"]"
            ],
            "source": "sc.tl.leiden",
            "target": "sc.pl.umap",
            "args": {"color": "leiden"},
            "arg_types": {
                "color": "str"
            }
        },
        {
            "dependencies": [
                "data.obs[\"leiden\"]"
            ],
            "source": "sc.tl.leiden",
            "target": "sc.pl.diffmap",
            "args": {"color": "leiden"},
            "arg_types": {
                "color": "str"
            }
        },
        {
            "dependencies": [
                "data.obs[\"leiden\"]"
            ],
            "source": "sc.tl.leiden",
            "target": "sc.tl.rank_genes_groups",
            "args": {"groupby": "leiden"},
            "arg_types": {
                "groupby": "str"
            }
        },
        {
            "dependencies": [
                "data.obs[\"leiden\"]"
            ],
            "source": "sc.tl.leiden",
            "target": "sc.pl.rank_genes_groups_dotplot",
            "args": {"groupby": "leiden"},
            "arg_types": {
                "groupby": "str"
            }
        },
        {
            "dependencies": [
                "data.obs[\"leiden\"]"
            ],
            "source": "sc.tl.leiden",
            "target": "sc.pl.correlation_matrix",
            "args": {"groupby": "leiden"},
            "arg_types": {
                "groupby": "str"
            },
            "_deprecated": true,
            "_comment": "Not found sc.pl.correlation_matrix in doc."
        },
        {
            "dependencies": [
                "data.obs[\"louvain\"]"
            ],
            "source": "sc.tl.louvain",
            "target": "sc.pl.heatmap",
            "args": {"groupby": "louvain"},
            "arg_types": {
                "groupby": "str"
            }
        },
        {
            "dependencies": [
                "data.obs[\"louvain\"]"
            ],
            "source": "sc.tl.louvain",
            "target": "sc.pl.dotplot",
            "args": {"groupby": "louvain"},
            "arg_types": {
                "groupby": "str"
            }
        },
        {
            "dependencies": [
                "data.obs[\"louvain\"]"
            ],
            "source": "sc.tl.louvain",
            "target": "sc.pl.violin",
            "args": {"groupby": "louvain"},
            "arg_types": {
                "groupby": "str"
            }
        },
        {
            "dependencies": [
                "data.obs[\"louvain\"]"
            ],
            "source": "sc.tl.louvain",
            "target": "sc.pl.dendrogram",
            "args": {"groupby": "louvain"},
            "arg_types": {
                "groupby": "str"
            }
        },
        {
            "dependencies": [
                "data.obs[\"louvain\"]"
            ],
            "source": "sc.tl.louvain",
            "target": "sc.pl.pca",
            "args": {"color": "louvain"},
            "arg_types": {
                "color": "str"
            }
        },
        {
            "dependencies": [
                "data.obsm[\"X_diffmap\"]"
            ],
            "source": "sc.tl.diffmap",
            "target": "sc.pl.diffmap",
            "args": {"adata": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.X"
            ],
            "source": "sc.pp.log1p",
            "target": "sc.pp.highly_variable_genes",
            "args": {"data": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.X"
            ],
            "source": "sc.pp.log1p",
            "target": "sc.pl.highly_variable_genes",
            "args": {"data": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.var[\"dispersions_norm\"]",
                "data.var[\"highly_variable\"]",
                "data.var[\"means\"]",
                "data.var[\"dispersions\"]"
            ],
            "source": "sc.pp.highly_variable_genes",
            "target": "sc.pl.highly_variable_genes",
            "args": {"adata": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.obs[\"umap_density\"]",
                "data.uns[\"umap_density_params\"]"
            ],
            "source": "sc.tl.embedding_density",
            "target": "sc.pl.embedding_density",
            "args": {"adata": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.uns[\"rank_genes_groups\"]"
            ],
            "source": "sc.tl.rank_genes_groups",
            "target": "sc.pl.rank_genes_groups_dotplot",
            "args": {"adata": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.X"
            ],
            "source": "root",
            "target": "sc.pp.neighbors",
            "args": {"adata": "data"},
            "arg_types": {
                "data": "object"
            }
        },
        {
            "dependencies": [
                "data.X"
            ],
            "source": "root",
            "target": "sc.pp.log1p",
            "args": {"data": "data"},
            "arg_types": {
                "data": "object"
            }
        }
    ]
}